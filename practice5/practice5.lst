     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  
     5                                  extern exit, fopen, fclose, fprintf               
     6                                  import exit msvcrt.dll    
     7                                  import fopen msvcrt.dll 
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll 
    10                                  
    11                                  ;Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, cifre si spatii. 
    12                                  ;Sa se inlocuiasca toate cifrele de pe pozitii pare cu caracterul ‘X’. 
    13                                  ;Sa se creeze un fisier cu numele dat si sa se scrie textul obtinut in fisier.
    14                                  
    15                                  segment data use32 class=data
    16                                      
    17 00000000 707261637469636535-         nume_fisier db 'practice5.txt', 0
    17 00000009 2E74787400         
    18 0000000E 7700                        mod_acces db 'w', 0
    19 00000010 FFFFFFFF                    descriptor dd -1 
    20 00000014 616E64723369206172-         text db 'andr3i ar3 573 note la mat3', 0
    20 0000001D 3320353733206E6F74-
    20 00000026 65206C61206D617433-
    20 0000002F 00                 
    21                                      len equ $ - text 
    22 00000030 00<rept>                    text_final times len db 0 
    23                                      
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ;opening file practice5.txt 
    27                                          ;eax = fopen(nume_fisier, mod_acces)
    28 00000000 68[0E000000]                    push dword mod_acces
    29 00000005 68[00000000]                    push dword nume_fisier
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2 
    32                                          
    33 00000013 A3[10000000]                    mov [descriptor], eax 
    34                                          
    35 00000018 83F800                          cmp eax, 0
    36 0000001B 0F848A000000                    je final 
    37                                          
    38 00000021 B91C000000                      mov ecx, len 
    39 00000026 BE[14000000]                    mov esi, text 
    40 0000002B BF[30000000]                    mov edi, text_final
    41 00000030 BB01000000                      mov ebx, 1
    42                                      repeta:
    43 00000035 AC                              lodsb ;incarcam in AL elementul din text 
    44 00000036 FEC3                            inc bl ;incrementam ca sa ii aflam pozitia
    45 00000038 F6C301                          test bl, 1b
    46 0000003B 7548                            jnz iesire_repeta
    47 0000003D 3C30                            cmp al, '0'
    48 0000003F 7244                            jb iesire_repeta
    49 00000041 3C39                            cmp al, '9'
    50 00000043 7204                            jb change_digit
    51 00000045 3C39                            cmp al, '9'
    52 00000047 773C                            ja iesire_repeta
    53                                      ;literally the worst solution that I could have ever thought of 
    54                                      ;I hate myself for doing this
    55                                      change_digit:
    56 00000049 3C00                            cmp al, 0
    57 0000004B 7424                            je add_digit1
    58 0000004D 3C01                            cmp al, 1
    59 0000004F 7422                            je add_digit2
    60 00000051 3C02                            cmp al, 2
    61 00000053 7420                            je add_digit3
    62 00000055 3C03                            cmp al, 3
    63 00000057 741E                            je add_digit4
    64 00000059 3C04                            cmp al, 4
    65 0000005B 741C                            je add_digit5
    66 0000005D 3C05                            cmp al, 5
    67 0000005F 741A                            je add_digit6
    68 00000061 3C06                            cmp al, 6
    69 00000063 7418                            je add_digit7
    70 00000065 3C07                            cmp al, 7
    71 00000067 7416                            je add_digit8
    72 00000069 3C08                            cmp al, 8
    73 0000006B 7414                            je add_digit9
    74 0000006D 3C09                            cmp al, 9
    75 0000006F 7412                            je add_digit10
    76                                      add_digit1:
    77 00000071 0428                            add al, 40
    78                                      add_digit2:
    79 00000073 0427                            add al, 39
    80                                      add_digit3:
    81 00000075 0426                            add al, 38
    82                                      add_digit4:
    83 00000077 0425                            add al, 37
    84                                      add_digit5:
    85 00000079 0424                            add al, 36
    86                                      add_digit6:
    87 0000007B 0423                            add al, 35
    88                                      add_digit7:
    89 0000007D 0422                            add al, 34
    90                                      add_digit8:
    91 0000007F 0421                            add al, 33
    92                                      add_digit9:
    93 00000081 0420                            add al, 32
    94                                      add_digit10:
    95 00000083 041F                            add al, 31
    96                                          
    97                                      iesire_repeta:
    98 00000085 AA                              stosb 
    99 00000086 E2AD                            loop repeta 
   100                                          
   101                                          ;print the resulting text in the file
   102                                          ;eax = fprintf(descriptor, text_final)
   103 00000088 68[30000000]                    push dword text_final
   104 0000008D FF35[10000000]                  push dword [descriptor]
   105 00000093 FF15[00000000]                  call [fprintf]
   106 00000099 83C408                          add esp, 4*2 
   107                                      
   108                                          ;closing file
   109                                          ;eax = fclose(descriptor)
   110 0000009C FF35[10000000]                  push dword [descriptor]
   111 000000A2 FF15[00000000]                  call [fclose]
   112 000000A8 83C404                          add esp, 4
   113                                      
   114                                      final:
   115 000000AB 6A00                            push    dword 0      
   116 000000AD FF15[00000000]                  call    [exit]       
